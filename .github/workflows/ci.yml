name: Node.js CI

on: push

# on:
#   push:
#     branches: [$default-branch]
#   pull_request:
#     branches: [$default-branch]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.15.x]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            ${{ runner.os }}-

      - name: Installing dependencies
        run: npm ci --cache ~/.npm --prefer-offline

      - name: Running tests
        run: npx nx affected --target=test --base=remotes/origin/main

      - name: Running lint
        run: npx nx affected --target=lint --base=remotes/origin/main

      - name: Running build
        run: npx nx affected --target=build --base=remotes/origin/main --prod

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Running Docker build
        run: npx nx affected --target=docker --base=remotes/origin/main
        env:
          INPUT_PUSH: true
